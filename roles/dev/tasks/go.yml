---
- name: "Import go_ensure"
  import_tasks: "go_ensure.yml"

- name: "Register the current Go version"
  command: "{{ golang_install_dir }}/go/bin/go version"
  register: "go_bin_version"
  changed_when: false
  ignore_errors: yes

- name: "Download and install Go"
  block:
    - name: "Delete existing Go if it's different version"
      become: yes
      file:
        path: "{{ golang_install_dir }}/go"
        state: absent
      when: "(go_bin_version.stdout is defined)"

    - name: "Check that the Go tar exists"
      stat:
        path: "{{ dev_cache_dir }}/{{ golang_tarball }}"
      register: golang_tar

    - name: "Download the Go tarball"
      get_url:
        url: "{{ golang_download_location }}"
        dest: "{{ dev_cache_dir }}"
      when: not golang_tar.stat.exists

    - name: "Extract the Go tarball"
      become: yes
      unarchive:
        src: "{{ dev_cache_dir }}/{{ golang_tarball }}"
        dest: "{{ golang_install_dir }}"
        remote_src: yes
        owner: "root"
        group: "root"
        creates: "{{ golang_install_dir }}/go"
  when: "go_bin_version.stdout != golang_version_string"
