---
- name: "Register the current {{ name }} version"
  command: "{{ version_cmd }}"
  register: "bin_version"
  changed_when: false
  ignore_errors: true

- name: "Retrieve latest {{ name }} version"
  uri:
    url: "{{ latest_url }}"
    return_content: true
  register: latest_json

- name: "Set latest {{ name }} version"
  set_fact:
    latest_version: "{{ latest_json.json['tag_name'] | regex_replace('^v','') }}"
    latest_version_tag: "{{ latest_json.json['tag_name'] }}"

- name: "Set latest {{ name }} version string"
  set_fact:
    latest_version_string: "{{ version_string | replace('VERSION_TAG', latest_version_tag) | replace('VERSION', latest_version) }}"

- name: "Download and install {{ name }}"
  block:
    - name: "Ensure cache dir exists"
      file:
        path: "{{ cache_dir | default('/tmp/cacheansible') }}"
        state: directory

    - name: "Ensure·install·location·exists"
      become: true
      file:
        path: "{{ bin_dir }}"
        state: directory

    - name: "Download the {{ name }} release"
      get_url:
        url: "{{ download_url }}"
        dest: "{{ cache_dir | default('/tmp/cacheansible') }}"

    - block:
      - name: "Extract the {{ name }} tarball"
        become: true
        unarchive:
          src: "{{ cache_dir | default('/tmp/cacheansible') }}/{{ tarball_name }}"
          remote_src: yes
          dest: "{{ bin_dir }}"
          extra_opts: >-
            {{ tarball_strip is defined | ternary(["--strip-components", tarball_strip], []) +
              tarball_add_file is defined | ternary(["--add-file", tarball_add_file], []) }}

      - name: "Give execution permissions to the {{ name }} binary"
        become: true
        file:
          path: "{{ bin_dir }}/{{ name }}"
          mode: "a+x"
      when: "tarball_name is defined"

    - block:
      - name: "Copy the {{ name }} binary"
        become: true
        copy:
          src: "{{ cache_dir | default('/tmp/cacheansible') }}/{{ release_bin_name }}"
          dest: "{{ bin_dir }}/{{ name }}"
          mode: "a+x"
      when: "release_bin_name is defined"
  when: "bin_version.stdout is not match(latest_version_string)"
